// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type M_1101Toc struct {
	Cmd              *uint32 `protobuf:"varint,1,req,name=cmd" json:"cmd,omitempty"`
	ErrorCode        *uint32 `protobuf:"varint,2,req,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Description      *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *M_1101Toc) Reset()                    { *m = M_1101Toc{} }
func (m *M_1101Toc) String() string            { return proto.CompactTextString(m) }
func (*M_1101Toc) ProtoMessage()               {}
func (*M_1101Toc) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *M_1101Toc) GetCmd() uint32 {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return 0
}

func (m *M_1101Toc) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *M_1101Toc) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*M_1101Toc)(nil), "go_proto.m_1101_toc")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0xcf, 0x8f, 0x07, 0xb3, 0x94,
	0xe2, 0xb9, 0xb8, 0x72, 0xe3, 0x0d, 0x0d, 0x0d, 0x0c, 0xe3, 0x4b, 0xf2, 0x93, 0x85, 0x04, 0xb8,
	0x98, 0x93, 0x73, 0x53, 0x24, 0x18, 0x15, 0x98, 0x34, 0x78, 0x83, 0x40, 0x4c, 0x21, 0x59, 0x2e,
	0xae, 0xd4, 0xa2, 0xa2, 0xfc, 0xa2, 0xf8, 0xe4, 0xfc, 0x94, 0x54, 0x09, 0x26, 0xb0, 0x04, 0x27,
	0x58, 0xc4, 0x39, 0x3f, 0x25, 0x55, 0x48, 0x81, 0x8b, 0x3b, 0x25, 0xb5, 0x38, 0xb9, 0x28, 0xb3,
	0xa0, 0x24, 0x33, 0x3f, 0x4f, 0x82, 0x59, 0x81, 0x51, 0x83, 0x33, 0x08, 0x59, 0x08, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x8e, 0xd0, 0x80, 0x15, 0x79, 0x00, 0x00, 0x00,
}
